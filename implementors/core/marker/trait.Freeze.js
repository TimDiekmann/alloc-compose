(function() {var implementors = {};
implementors["alloc_compose"] = [{"text":"impl&lt;Alloc, Prefix, Suffix&gt; Freeze for Affix&lt;Alloc, Prefix, Suffix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Alloc: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, const SIZE:&nbsp;usize&gt; Freeze for Chunk&lt;A, SIZE&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Primary, Secondary&gt; Freeze for Fallback&lt;Primary, Secondary&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Primary: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Secondary: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Null","synthetic":true,"types":[]},{"text":"impl&lt;A, C&gt; Freeze for Proxy&lt;A, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Region&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Freeze for Counter","synthetic":true,"types":[]},{"text":"impl !Freeze for AtomicCounter","synthetic":true,"types":[]},{"text":"impl !Freeze for FilteredCounter","synthetic":true,"types":[]},{"text":"impl !Freeze for FilteredAtomicCounter","synthetic":true,"types":[]},{"text":"impl Freeze for AllocInitFilter","synthetic":true,"types":[]},{"text":"impl Freeze for ReallocPlacementFilter","synthetic":true,"types":[]},{"text":"impl Freeze for ResultFilter","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()