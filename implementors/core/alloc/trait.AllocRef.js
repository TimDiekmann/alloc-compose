(function() {var implementors = {};
implementors["alloc_compose"] = [{"text":"impl&lt;A:&nbsp;AllocRef, const SIZE:&nbsp;usize&gt; AllocRef for Chunk&lt;A, SIZE&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Self: SizeIsPowerOfTwo,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;Primary, Secondary&gt; AllocRef for Fallback&lt;Primary, Secondary&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Primary: AllocRef + Owns,<br>&nbsp;&nbsp;&nbsp;&nbsp;Secondary: AllocRef,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl AllocRef for Null","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;AllocRef, C:&nbsp;CallbackRef&gt; AllocRef for Proxy&lt;A, C&gt;","synthetic":false,"types":[]},{"text":"impl AllocRef for RawRegion","synthetic":false,"types":[]},{"text":"impl AllocRef for RawSharedRegion","synthetic":false,"types":[]},{"text":"impl AllocRef for RawIntrusiveRegion","synthetic":false,"types":[]},{"text":"impl&lt;'_&gt; AllocRef for Region&lt;'_&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'_&gt; AllocRef for SharedRegion&lt;'_&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'_&gt; AllocRef for IntrusiveRegion&lt;'_&gt;","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()