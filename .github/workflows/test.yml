name: Test

on: [push, pull_request]

env:
  CARGO_INCREMENTAL: 0
  RUSTFLAGS: -Zprofile -Ccodegen-units=1 -Copt-level=0 -Clink-dead-code -Coverflow-checks=off -Zno-landing-pads

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macOS-latest
        rust:
          - nightly
        cargo_flags:
          - ""
          - "--all-features"
    steps:
      - name: Install Rust
        uses: hecrj/setup-rust-action@master
        with:
          rust-version: ${{ matrix.rust }}

      - name: Checkout source code
        uses: actions/checkout@master

      - name: Build
        run: cargo build --verbose --all ${{ matrix.cargo_flags }}

      - name: Test
        run: cargo test --verbose --all ${{ matrix.cargo_flags }}

      - name: Collect coverage data
        shell: bash
        run: |
          case "${{ matrix.os }}" in
            ubuntu-latest)
              GRCOV_NAME=grcov-linux-x86_64.tar.bz2
              ;;
            windows-latest)
              GRCOV_NAME=grcov-win-x86_64.tar.bz2
              ;;
            macOS-latest)
              GRCOV_NAME=grcov-osx-x86_64.tar.bz2
              ;;
          esac
          curl -L https://github.com/mozilla/grcov/releases/latest/download/${GRCOV_NAME} | tar jxf -
          zip -0 ccov.zip `find . \( -name "alloc_compose*.gc*" \) -print`;
          ./grcov ccov.zip -s . -t lcov --llvm --branch --ignore-not-existing --ignore "/*" -o lcov.info;

      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          flag-name: ${{ matrix.os }}${{ matrix.cargo_flags }}
          path-to-lcov: lcov.info
          parallel: true

  finish:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Coveralls Finished
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: true
